#ifdef GL_ES
	precision highp float;
#endif

attribute vec3 vertexPosition;
attribute vec3 vertexColor;
attribute vec3 vertexNormal;
attribute vec2 vertexTextureCoordinate;

uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;
uniform mat3 normalMatrix;

uniform vec3 lightPosition;

varying vec2 textureCoordinate;
varying vec3 normal;
varying vec3 lightDirection;

void main(void) {
	gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);
	
	vec4 position = modelViewMatrix * vec4(vertexPosition, 1.0);
	vec3 correctedPosition = position.xyz / position.w;
	
	normal = normalize(normalMatrix * vertexNormal);
	lightDirection = normalize(lightPosition - correctedPosition);	
	textureCoordinate = vertexTextureCoordinate;
}